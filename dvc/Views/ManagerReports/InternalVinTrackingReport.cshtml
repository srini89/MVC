@using System.Text.RegularExpressions
@using VanWagenen.Dvc.Web.Helpers
@model List<VanWagenen.Dvc.Repository.Models.vInternalVinTracking>
@{
    var modelType = typeof(VanWagenen.Dvc.Repository.Models.vInternalVinTracking);
    var properties = modelType.GetProperties();
    ViewBag.Title = "InternalVinTrackingReport";
}
@section Scripts {
    <script src="@Url.Content("~/Scripts/app/ManagerReports.js")"></script>
}
<div class="row">
    <div class="col-lg-6">
        <h2>Internal Vin Tracking Report</h2>
    </div>
</div>
<br/>
<div class="row">
    <div class="col-lg-6">
        @Html.AntiForgeryToken()
        @using (Html.BeginForm("InternalVinTrackingReport", "ManagerReports", FormMethod.Post, new { @class = "form-inline" }))
        {
            <div class="form-group">
                <label>Start Date: </label>
                <input class="form-control" type="date" name="startDate" value="@(ViewBag.StartDate)" required />
            </div>

            <div class="form-group">
                <label>End Date: </label>
                <input class="form-control" type="date" name="endDate" value="@(ViewBag.EndDate)" required />
            </div>
            <button type="submit" class="btn btn-success">Submit</button>
        }
    </div>
    <div class="col-lg-6">
        <button id="ExportToExcel" class="btn btn-default pull-right">Export To Excel</button>
    </div>
</div>

<br/>

@if (!string.IsNullOrWhiteSpace(ViewBag.internalVinTrackingReportEmpty))
{
    <div class="row">
        <div class="col-lg-6">
            <h3>@ViewBag.internalVinTrackingReportEmpty</h3>
        </div>
    </div>
}
else
{
    <div class="row">
        <table id="ReportTable" class="InternalVinTrackingReportTable table table-striped table-hover">
            <thead>
            <tr>
                <th></th>
                @foreach (var property in properties)
                {
                    if (property.Name != "FilteredVinReport")
                    {
                        <th>
                            @property.Name.ToSentence()
                        </th>
                    }
                }
            </tr>
            </thead>
            <tbody>
            @foreach (var file in Model)
            {
                <tr>
                    @if (!string.IsNullOrEmpty(file.FilteredVinReport))
                    {
                        <td>
                            <a href="@Url.Action("DownloadFilterReport", "ManagerReports", new { clientFileId = file.ClientFileId })">
                                <i class="fa fa-download row-button" title="Open Filtered VIN Report" data-toggle="tooltip"></i>
                            </a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <i class="fa fa-download text-gray" title="No Filtered VIN Report exists for this Client File" data-toggle="tooltip"></i>
                        </td>
                    }
                    @foreach (var property in properties)
                    {
                        if (property.Name != "FilteredVinReport")
                        {
                            <td class="@property.Name">
                                @if (property.GetValue(file) is DateTime)
                                {
                                    var dateToDisplay = Convert.ToDateTime(property.GetValue(file)).ToShortDateString();
                                    @dateToDisplay
                                }
                                else
                                {
                                    @property.GetValue(file)
                                }
                            </td>
                        }
                    }
                </tr>
            }
            </tbody>

        </table>
    </div>   
}