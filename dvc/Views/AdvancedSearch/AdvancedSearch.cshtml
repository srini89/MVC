@using Microsoft.Ajax.Utilities
@using VanWagenen.Dvc.Repository.Models

@model VanWagenen.Dvc.Web.ViewModels.AdvancedSearchViewModel

@{
    ViewBag.Title = "AdvancedSearch";
}

@section Scripts {
    <script src="@Url.Content("~/Scripts/app/AdvancedSearch.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
}

<h2>Advanced Search</h2>
@Html.Partial("_BaseMessages")
@using (Html.BeginForm("DoAdvancedSearch", "AdvancedSearch", FormMethod.Post))
{
    @*Search Panel*@
    <div class="panel panel-default">
        <div class="panel-heading section-header" role="tab" id="headingOne">
            <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-target="#collapseDetails" aria-expanded="true" aria-controls="collapseDetails">
                    Search Filters
                </a>
            </h4>
        </div>
        <div id="collapseDetails" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
            <div id="details" class="panel-body" style="padding-bottom: 2px !important;">
                <div class="row">
                    <div class="col-sm-8">
                        <div class="form-group form-group-sm row">
                            <div class="col-xs-3">
                                @Html.LabelFor(model => model.SearchClaimId, "Claim Id")<br />
                                @Html.TextBoxFor(model => model.SearchClaimId, new { @class = "form-control" })
                            </div>
                            <div class="col-xs-3">
                                @Html.LabelFor(model => model.SearchVIN, "VIN")<br />
                                @Html.TextBoxFor(model => model.SearchVIN, new { @class = "form-control", maxlength="17" })
                            </div>
                            <div class="col-xs-3">
                                @Html.LabelFor(model => model.SearchDateOfLoss, "Date Of Loss")<br />
                                @Html.EditorFor(model => model.SearchDateOfLoss, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            </div>
                            <div class="col-sm-3"></div>
                        </div>
                        <div class="form-group form-group-sm row">
                            <div class="col-xs-3">
                                @Html.LabelFor(model => model.SearchLesseeName, "Lessee Name")<br />
                                @Html.TextBoxFor(model => model.SearchLesseeName, new { @class = "form-control" })
                            </div>
                            <div class="col-xs-3">
                                @Html.LabelFor(model => model.SearchInsuranceClaimNumber, "Insurance Claim Number")<br />
                                @Html.TextBoxFor(model => model.SearchInsuranceClaimNumber, new { @class = "form-control" })
                            </div>
                            <div class="col-xs-3">
                                @Html.LabelFor(model => model.SearchAccountNumber, "Client Account Number")<br />
                                @Html.TextBoxFor(model => model.SearchAccountNumber, new { @class = "form-control" })
                            </div>
                            <div class="col-sm-1" style="margin-top: 22px;">
                                <button type="submit" name="advanced-search-submit" class="btn btn-default" value="Search">Search</button>
                            </div>
                            <div class="col-sm-2"></div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (!Model.StatusMessage.IsNullOrWhiteSpace())
{
    <div class="row">
        <h4>@Html.DisplayFor(m => m.StatusMessage)</h4>
    </div>
}

@*Results Panel*@
<div class="row" id="dvSearchResults">
    @if (Model != null)
    {
        if (Model.SearchResults != null)
        {
            if (Model.SearchResults.Any())
            {
                <table class="searchResultsTable table table-striped table-hover">
                    <tr>
                        <th>Edit</th>
                        <th>Name</th>
                        <th>Insurance Claim #</th>
                        <th>VIN</th>
                        <th> Client Account #</th>
                        <th>van Wagenen Claim #</th>
                        <th>Carrier Name</th>
                        <th>Date of Loss</th>
                        <th>Check Amount</th>
                        <th>Claim Status</th>
                        <th>Actions</th>
                    </tr>

                    @foreach (var claim in Model.SearchResults)
                    {
                        string tdClass = "";
                        string titleText = "";
                        if (claim.Locked != null && claim.Locked.Value && claim.LockedBy != claim.CurrentAssigneeId)
                        {
                            tdClass = "text-gray";
                            titleText = "Claim is currently locked by " + claim.LockedByName + ".";
                        }
                        <tr title = "@titleText">
                            <td>
                                @if (claim.Locked == false || claim.Locked == true && claim.LockedBy == claim.CurrentAssigneeId)
                                {
                                    <button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("ViewClaim", "Claim", new { id = claim.ClaimId })'" title="Open claim">
                                        <i class="glyphicon glyphicon-pencil"></i>
                                    </button>
                                } else
                                {
                                    <button type="button" class="btn btn-default disabled" title="Claim is currently locked by @claim.LockedByName.">
                                        <i class="glyphicon glyphicon-pencil"></i>
                                    </button>
                                }
                            </td>
                            <td class="@tdClass">@claim.LesseeName</td>
                            <td class="@tdClass">@claim.CarrierClaimNumber</td>
                            <td class="@tdClass">@claim.Vin</td>
                            <td class="@tdClass">@claim.ClientAccountNumber</td>
                            <td class="@tdClass">@claim.ClaimId</td>
                            <td class="@tdClass">@claim.Carrier</td>
                            <td class="@tdClass">@claim.DateOfLoss.ToShortDateString()</td>
                            <td class="@tdClass">@claim.CheckAmount.ToString("c")</td>
                            <td class="@tdClass">
                                <span id="ViewClaimState">@claim.ClaimState</span>
                            </td>
                            <td>
                                @if (claim.Locked == false || (claim.Locked == true && claim.LockedBy == claim.CurrentAssigneeId))
                                {
                                    <button type="button" class="btn btn-default bt-xs" id="AddClaimDocument" name="AddClaimDocument" data-toggle="modal" data-id="@claim.ClaimId">
                                        <i class="glyphicon glyphicon-file"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-default bt-xs disabled" title="Claim is currently locked by @claim.LockedByName.">
                                        <i class="glyphicon glyphicon-file"></i>
                                    </button>
                                }
                                @if ((claim.ClaimState != Claim.State.New && claim.ClaimState != Claim.State.Close) || (claim.ClaimState == Claim.State.Close && Model.UserIsManager))
                                {
                                    if (claim.Locked == false || (claim.Locked == true && claim.LockedBy == claim.CurrentAssigneeId))
                                    {
                                        <button type="button" class="btn btn-default bt-xs" id="AddCheckDocument" name="AddCheckDocument" data-toggle="modal" data-id="@claim.ClaimId">
                                            <i class="glyphicon glyphicon-usd"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-default bt-xs disabled" title="Claim is currently locked by @claim.LockedByName.">
                                            <i class="glyphicon glyphicon-usd"></i>
                                        </button>
                                    }
                                }
                                else
                                {
                                    <span class="btn btn-default bt-xs disabled" data-toggle="toggle" title="Claim not in a valid state for adding check.">
                                        <i class="glyphicon glyphicon-usd"></i>
                                    </span>
                                }
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <div class="row">
                    <div class="col-lg-12">
                        <h3 style="padding-left:1em;">@Model.NoResultsMessage</h3>
                    </div>                    
                </div>
            }
        }
    }
    
    <div id="addDocumentModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close CancelAddDocument" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Document</h4>
                </div>
                @using (Html.BeginForm("AddDocumentAdvancedSearch", "AdvancedSearch", FormMethod.Post, new { enctype = "multipart/form-data", id = "AddDocumentForm" }))
                {
                    <div class="modal-body">
                        <div class="row form-group form-group-sm">
                            <div class="col-sm-10">
                                <label for="formGroupInputLarge1" class="control-label">Attach Document for Claim</label>
                            </div>
                            <div class="col-sm-2">
                                <button type="button" id="AddFileInputField" class="btn btn-default fa fa-plus"></button>
                            </div>
                        </div>
                        <div id="FileUploadArea" class="row">
                            <div class="row">
                                <div class="col-sm-3 control-label" style="padding-left:3em">
                                    <label for="formGroupInputLarge1">Filename:</label>
                                </div>
                                <div class="col-sm-4">
                                    <input id="FirstDocumentInput" type="file" name="FileUpload"/><br/>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        @Html.HiddenFor(model => model.Document.ClaimId)
                        @Html.HiddenFor(model => model.SearchClaimId)
                        @Html.HiddenFor(model => model.SearchAccountNumber)
                        @Html.HiddenFor(model => model.SearchDateOfLoss)
                        @Html.HiddenFor(model => model.SearchInsuranceClaimNumber)
                        @Html.HiddenFor(model => model.SearchLesseeName)
                        @Html.HiddenFor(model => model.SearchVIN)
                        <input type="submit" id="AddDocumentButton" class="btn btn-success" name="AddDocument" value="Add Document" disabled/>
                        <button type="button" class="btn btn-default CancelAddDocument" data-dismiss="modal">Cancel</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div id="addCheckModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Check</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <label for="formGroupInputLarge1" class="col-sm-10 control-label">Attach Check for Claim </label>
                    </div>
                    <div class="row">
                        <label for="formGroupInputLarge1" class="col-sm-3 control-label">Filename:</label>
                        <div class="col-sm-4">
                            <div class="col-sm-2">
                                <input type="file" name="CheckUpload" id="CheckUpload" /><br />
                            </div>
                        </div>
                    </div>
                    <div class="row form-group">
                        <label for="formGroupInputLarge1" class="col-sm-3 control-label">Check #:</label>
                        <div class="col-sm-4">
                            <div class="col-sm-2">
                                @Html.EditorFor(model => model.Document.Check.Number)
                            </div>
                        </div>
                    </div>
                    <div class="row form-group">
                        <label for="formGroupInputLarge1" class="col-sm-3 control-label">Check Amount:</label>
                        <div class="col-sm-4">
                            <div class="col-sm-2">
                                @Html.EditorFor(model => model.Document.Check.Amount)
                                @Html.ValidationMessageFor(model => model.Document.Check.Amount)
                            </div>
                        </div>
                    </div>
                    <div class="row form-group">
                        <label for="formGroupInputLarge1" class="col-sm-3 control-label">Confirm Amount:</label>
                        <div class="col-sm-4">
                            <div class="col-sm-2">
                                @Html.EditorFor(model => model.Document.Check.ConfirmAmount)
                                @Html.ValidationMessageFor(model => model.Document.Check.ConfirmAmount)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-10 btn-group">
                            @Html.HiddenFor(model => model.Document.ClaimId)
                        </div>
                    </div>

                    <div class="modal-footer">
                        <input type="button" class="btn btn-success AddCheck" name="AddCheck" id="AddCheck" value="Add Check" />
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


