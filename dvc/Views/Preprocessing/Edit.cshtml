@model VanWagenen.Dvc.Web.Models.Accident

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        
    <div class="form-horizontal">
        <h4>Accident</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RowVersion)
        
        <div class="form-group">
            @Html.LabelFor(model => model.PoliceReportFilePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PoliceReportFilePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PoliceReportFilePath, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.VIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VIN, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.CauseOfDamage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CauseOfDamage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CauseOfDamage, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.StatuteOfLimitations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StatuteOfLimitations, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StatuteOfLimitations, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.DamageLeftFront, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DamageLeftFront)
                    @Html.ValidationMessageFor(model => model.DamageLeftFront, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.DamageLeftSide, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DamageLeftSide)
                    @Html.ValidationMessageFor(model => model.DamageLeftSide, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.DamageLeftBack, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DamageLeftBack)
                    @Html.ValidationMessageFor(model => model.DamageLeftBack, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.DamageRightFront, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DamageRightFront)
                    @Html.ValidationMessageFor(model => model.DamageRightFront, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.DamageRightSide, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DamageRightSide)
                    @Html.ValidationMessageFor(model => model.DamageRightSide, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.DamageRightBack, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DamageRightBack)
                    @Html.ValidationMessageFor(model => model.DamageRightBack, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.RepairEstimate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepairEstimate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RepairEstimate, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
    
<div>
    @Html.ActionLink("Back to List", "Index")
</div>