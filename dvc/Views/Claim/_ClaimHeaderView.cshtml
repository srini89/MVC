@using VanWagenen.Dvc.Web.Helpers
@using VanWagenen.Dvc.Repository.Models

@model VanWagenen.Dvc.Web.ViewModels.ClaimHeaderViewModel

<script src="~/Scripts/app/AssignFollowUp.js"></script>

<div id="target">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">Assign Follow Up</h4>
    </div>
    @using (Ajax.BeginForm("ClaimHeaderView", "Claim",
                                new AjaxOptions
                                {
                                    HttpMethod = "POST",
                                    InsertionMode = InsertionMode.ReplaceWith,
                                    UpdateTargetId = "target",
                                    OnSuccess = "location.reload()",
                                    OnFailure = "UpdateFailure()"
                                }, new { id = "AssignFollowUpForm" } ))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ClaimId)
        @Html.HiddenFor(model => model.RowVersion)
        <div class="modal-body">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.SelectedTrigger, "Schedule", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6" style="padding-left:1em;">
                        <div class="row">
                            @Html.TriggerDropDownListForClaim("SelectedTrigger", Model.PermittedTriggers, Model.SelectedTrigger, new { })
                        </div>
                        <div id="TriggerDrowndownValidation" style="display: none" class = "text-danger">Please select a trigger to schedule</div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FollowUpActionDate, "Follow Up Action Date", new { @class = "control-label col-md-4" })
                    <div class="col-sm-6 input-group date">
                        @Html.EditorFor(model => model.FollowUpActionDate, new { htmlAttributes = new { min = ""} })
                    </div>
                    <div id="FollowUpActionDateValidation" style="display: none" class = "text-danger">Date must be today or a later date.</div>
                </div>

                <div class="form-group">
                        @Html.LabelFor(model => model.Note, "Assignment Note", new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        <div class="row">
                            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @onkeyup = "countChar(this)", @maxlength = "75", @style = "resize: none;" } })
                        </div>
                        <div class="row">
                            <span id="charCounter">75 characters remaning</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button id="assignFollowUpSubmit" type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
        </div>
    }
</div>