@model VanWagenen.Dvc.Web.ViewModels.EditUserViewModel
@using VanWagenen.Dvc.Web.Helpers

@section Scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}
<div class="page-header">
    <h2>Edit User - @Model.Name</h2>
</div>
@Html.Partial("_BaseMessages")
@using (Html.BeginForm("UpdateUser", "Admin", new { @SortBy = ViewBag.SortBy }, FormMethod.Post))
{
    <div class="user-details-container">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.AssigneeId, new { @class = "assignee-id" })
        @Html.HiddenFor(model => model.RowVersion)
        @Html.Partial("_UserEditFields")
        <div class="row form-group form-group-sm">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
        <div id="reassign-users" class="row form-group form-group-sm" style="padding: 15px;">
            <button type="button" class="btn btn-default" data-toggle="collapse" data-target="#reassign-container">Reassign Claims...</button>
            <div id="reassign-container" class="collapse fs-group">
                <fieldset class="fs-group">
                    <legend class="fs-group">Claims in each status</legend>
                    <row class="form-group form-group-sm">
                        @{  foreach (var clientStatus in Model.CurrentStatusCounts)
                            {
                                <div class="col-sm-2" style="border: solid 1px #808080; border-radius: 4px;">
                                    <div class="row">
                                        <span class="text-gray">Client: </span><span style="font-weight: bold;"> @clientStatus.Key</span>
                                    </div>

                                    @{  foreach (var kvPair in clientStatus.Value)
                                        {
                                            <div class="row">
                                                <div class="col-xs-10" style="min-width: 157px;">
                                                    <span style="color: dimgray;">@kvPair.Key</span>
                                                </div>
                                                <div class="col-xs-2" style="font-weight: bold;">
                                                    <span style="font-weight: bold;">@kvPair.Value</span>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                             }
                        }
                    </row>
                </fieldset>
                @{ var filteredUsers = SelectListItemHelper.GetFilteredUserList(Model.AssigneeId, Model.ReassignAllClientFilter.Value); }
                <ul class="nav nav-tabs" style="margin-top: 5px;">
                    <li class="active"><a data-toggle="tab" href="#reassign-all">Re-assign All Claims</a></li>
                    <li><a data-toggle="tab" href="#reassign-claims">Re-assign Specific Claims</a></li>
                </ul>
                <div class="tab-content" style="border-left: 1px solid #dedede; border-right: 1px solid #dedede; border-bottom: 1px solid #dedede;">
                    <div id="reassign-all" class="tab-pane fade in active">
                        <div class="panel-body ">
                            <div class="row">
                                <div class="col-sm-8">
                                    <div class="row form-group form-group-sm" style="margin-top: 10px; margin-bottom: 0px !important;">
                                        <div class="col-sm-5">
                                            <span class="reassign-text">Assign all @Model.Name's claims associated with Client </span>
                                        </div>
                                        <div class="col-sm-3">
                                            @Html.DropDownListFor(model => model.ReassignAllClientFilter, SelectListItemHelper.GetUserClientList(Model.AssigneeId), new { @class = "form-control reassign-all-client", data_width = "auto" })
                                        </div>
                                        <div class="col-sm-1">
                                            <span class="reassign-text">to User</span>
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.DropDownListFor(model => model.ReassignAllAssignee, filteredUsers, new { @class = "form-control reassign-all-user", data_width = "auto" })
                                            @if (filteredUsers.Count() == 0)
                                            {
                                                <div id="reassign-all-no-users">
                                                    <span class="error-sm">There are no users with the same associated clients.</span>
                                                </div>
                                            }
                                        </div>
                                        <div class="col-sm-1">
                                            <button type="submit" id="reassign-all-claims" name="UpdateUser" value="Reassign All Claims" class="btn btn-primary" title="Reassign Claims" onclick="return confirm('Are you sure you want to reassign these claims?');">
                                                <i id="reassign-claims-icon" class="fa fa-check"></i>
                                            </button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="reassign-claims" class="tab-pane fade">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="row form-group form-group-sm" style="margin-top: 10px; margin-bottom: 0px !important;">
                                        <div class="col-sm-1">
                                            <span class="reassign-text">Assign</span>
                                        </div>
                                        <div class="col-sm-1">
                                            @Html.TextBoxFor(model => model.ReassignCount, new { @class = "form-control", @type = "number", @style = "width: 70px;", @title = "Number of claims to reassign", data_toggle = "tooltip" })
                                        </div>
                                        <div class="col-sm-2">
                                            <span class="reassign-text">claims with a status of</span>
                                        </div>
                                        <div class="col-sm-1">
                                            @Html.DropDownListFor(model => model.SelectedStatus, Model.StatusList, new { @class = "form-control reassign-status", @title = "Select a status...", data_width = "auto" })
                                        </div>

                                        <div class="col-sm-2">
                                            <span class="reassign-text">and associated with Client</span>
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.DropDownListFor(model => model.ReassignClientFilter, SelectListItemHelper.GetUserClientList(Model.AssigneeId), new { @class = "form-control reassign-client", data_width = "auto" })
                                        </div>

                                        <div class="col-sm-1">
                                            <span class="reassign-text">to user</span>
                                        </div>
                                        <div class="col-sm-1">
                                            @Html.DropDownListFor(model => model.ReassignAssignee, filteredUsers, new { @class = "form-control reassign-user", @title = "Select a user...", data_width = "auto" })
                                            @if (filteredUsers.Count() == 0)
                                            {
                                                <div id="reassign-no-users">
                                                    <span class="error-sm">There are no users with the same associated clients.</span>
                                                </div>
                                            }
                                        </div>
                                        <div class="col-sm-1">
                                            <button type="submit" id="reassign-claims" name="UpdateUser" value="Reassign Claims" class="btn btn-primary" title="Reassign Claims" data-target="#reassign-user" onclick="return confirm('Are you sure you want to reassign these claims?');">
                                                <i id="reassign-claims-icon" class="fa fa-check"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <button type="submit" id="save-user-changes" name="UpdateUser" value="Save User" class="btn btn-success">Save</button>
            @Html.ActionLink("Cancel", "UserList", "Admin", new { @SortBy = ViewBag.SortBy }, new { @class = "btn btn-default" })
        </div>
    </div>
}
